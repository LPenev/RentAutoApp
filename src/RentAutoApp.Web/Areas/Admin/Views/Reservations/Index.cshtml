@using RentAutoApp.Web
@using RentAutoApp.Web.ViewModels.Admin.Reservations
@model List<ReservationAdminListItemViewModel>
@inject Microsoft.Extensions.Localization.IStringLocalizer<SharedResource> L

@{
    ViewData["Title"] = @L["Label.Admin"].Value+ " " + @L["Label.Reservations"].Value;
}
@await Html.PartialAsync("~/Areas/Admin/Views/Shared/_AdminMenu.cshtml")
<h2>@L["Label.Reservations"]</h2>

@if (TempData["StatusMessage"] is string msg && !string.IsNullOrWhiteSpace(msg))
{
    <div class="alert alert-info">@msg</div>
}

<table class="table table-striped">
    <thead>
        <tr>
            <th>#</th>
            <th>@L["Label.User"]</th>
            <th>@L["Label.Cars"]</th>
            <th>@L["Label.From"]</th>
            <th>@L["Label.To"]</th>
			<th>@L["Label.Status"]</th>
			<th>@L["Label.Paid"]</th>
            <th>@L["Label.Price"]</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var r in Model)
        {
            <tr>
                <td>@r.Id</td>
                <td>@r.UserEmail</td>
                <td>@r.VehicleTitle</td>
                <td>@r.StartDate.ToString("yyyy-MM-dd HH:mm")</td>
                <td>@r.EndDate.ToString("yyyy-MM-dd HH:mm")</td>
                <td>@r.Status</td>
				<td>@(r.IsPaid? @L["Label.IsPaid.Yes"] : @L["Label.IsPaid.No"])</td>
                <td>@r.PriceCalculated.ToString("0.00")</td>
                <td class="text-end">
                    <div class="btn-group btn-group-sm">
                        <form asp-action="Confirm" method="post">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@r.Id" />
                            <button class="btn btn-outline-secondary" type="submit">@L["Btn.Confirm"]</button>
                        </form>
                        <form asp-action="PickedUp" method="post">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@r.Id" />
                            <button class="btn btn-outline-secondary" type="submit">@L["Btn.PickedUp"]</button>
                        </form>
                        <form asp-action="Returned" method="post">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@r.Id" />
                            <button class="btn btn-outline-secondary" type="submit">@L["Btn.Returned"]
                            </button>
                        </form>
                        <form asp-action="Expired" method="post">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@r.Id" />
                            <button class="btn btn-outline-secondary" type="submit">@L["Btn.Expired"]</button>
                        </form>
                        <form asp-action="NoShow" method="post">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@r.Id" />
                            <button class="btn btn-outline-secondary" type="submit">No Show</button>
                        </form>
                        <form asp-action="Paid" method="post">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@r.Id" />
                            <input type="hidden" name="isPaid" value="@(r.IsPaid ? "false" : "true")" />
                            <button class="btn btn-outline-@(r.IsPaid ? "warning" : "success")" type="submit">
                                @(r.IsPaid ? @L["Btn.MarkUnpaid"] : @L["Btn.MarkPaid"])
                            </button>
                        </form>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>
